generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Customer {
  id   Int    @id @default(autoincrement())
  name String
}

model Location {
  id            Int                 @id @default(autoincrement())
  name          String
  location      String
  type          Location_type
  statistics    LocationStatistics?
  transitionLog TransitionLog[]
  employees     User[]
  packages      Package[]
  shipmentLog   ShipmentLog[]
}

model LocationStatistics {
  id            Int      @id @default(autoincrement())
  sentCount     Int
  receivedCount Int
  location_id   Int      @unique
  location      Location @relation(fields: [location_id], references: [id])
}

model Package {
  id                   Int            @id @default(autoincrement())
  sender               String
  receiver             String
  transaction_point_id Int
  state                Package_status
  location_id          Int
  location             Location       @relation(fields: [location_id], references: [id])
  shipment_id          Int            @unique
  shipment             ShipmentLog    @relation(fields: [shipment_id], references: [id])

  @@index([location_id])
  @@index([transaction_point_id])
}

model TransitionLog {
  id                   Int       @id @default(autoincrement())
  request_timestamp    DateTime  @default(now())
  verified_timestamp   DateTime?
  request_location     Int
  destination_location Int
  location_id          Int
  location             Location  @relation(fields: [location_id], references: [id])
  package_id           Int

  @@index([package_id])
  @@index([location_id])
}

model ShipmentLog {
  id                  Int                  @id @default(autoincrement())
  request_timestamp   DateTime             @default(now())
  status              Package_status
  request_location    Int
  location_id         Int
  location            Location             @relation(fields: [location_id], references: [id])
  package             Package?
  customerInstruction Customer_instruction

  @@index([location_id])
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  fullName    String
  role        User_role
  location_id Int
  location    Location  @relation(fields: [location_id], references: [id])

  @@index([location_id])
  @@index([id])
}

enum Customer_instruction {
  CANCEL
  INSTANT_RETURN
  RETURN_BEFORE
  CALL
  RETURN_AFTER_EXPIRED
}

enum Location_type {
  BRANCH
  TRANSSHIPMENT_HUB
}

enum Package_status {
  ONGOING
  RECEIVED
  RETURNED
}

enum User_role {
  LEADER
  TRANSSHIPMENT_HUB_MANAGER
  BRANCH_CENTER_MANAGER
  BRANCH_OFFFICER
  HUB_OFFICER
  CUSTOMER
}
